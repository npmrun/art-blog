---
import Preview from "@blog/ui/Preview/Preview.astro";
import Pagination from "@blog/components/Pagination.astro";
import { pageSize, siteInfo } from "@blog/config";
import BlogPage from "@blog/Layouts/BlogPage.astro";
import { published } from "@blog/utils";

export async function getStaticPaths({ paginate }) {
    const allPosts = await published();
    let allCategories = allPosts
        .filter((f) => f.categories != undefined)
        .map((p) => p.categories);
    let allCategoriesUnique = [...new Set(allCategories.flat())];
    return allCategoriesUnique.map((category) => {
        const filteredPosts = allPosts.filter(
            (post) => post.categories && post.categories.includes(category) && post.draft != true
        );
        return paginate(filteredPosts, {
            params: { category },
            pageSize: pageSize,
        });
    });
}
const { page } = Astro.props;
const { params } = Astro as unknown as { params: { category: any } };
let url = "category/" + params.category;
const capitalize = ([firstLetter, ...restOfWord]) =>
    firstLetter.toUpperCase() + restOfWord.join("");
---

<BlogPage title={capitalize(params.category)}  hero={siteInfo.hero} heroPosition={siteInfo.heroPosition}>
    <div class="flex p-4 items-center text-lg bg-orange-300 dark:bg-sky-500/100 rounded-md"> 
        <div class="font-bold mx-[20px]">{capitalize(params.category)}</div>
        <div class="ml-[15px]">{page.total} 个结果</div>
    </div>
    <div class="overflow-x-auto w-full">
        <table class="table-normal w-full">
            <tbody>
                <tr>
                    <td>
                        {page.data.map((post, i) => <Preview post={post}  direction={i % 2 === 0 ? "left" : ""}/>)}
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
    <Pagination
        currentPage={page.currentPage}
        totalPage={page.lastPage}
        url={url}
    />
</BlogPage>
