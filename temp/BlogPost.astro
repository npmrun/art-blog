---
import SitePage from "@blog/Layouts/Base/SitePage.astro";
import Date from "@blog/components/utilities/Date.astro";
import { settings } from "@blog/config";
import type { Post } from "#/type";
import { Picture } from "astro-imagetools/components";
import Hero from "@blog/ui/Hero/Hero.astro";

export interface Props {
    content: Post;
}

const { content } = Astro.props as Props;

const showToc = (content.toc ?? true) && settings.showTOC;

let image = content.hero;
if (!image && content._images.length && settings.postPicture === "first") {
    image = content._images[0].url;
}
// "https://tva2.sinaimg.cn/large/0084aYsLgy1h3juoi114yg318e0hj0wv.gif"
---

<SitePage title={content.title} desc={content.desc}>
    <Hero
        bg={image}
    />
    <div class="p-4 pb-10 max-w-3xl mx-auto">
        <main> 
            <article>
                {
                    image && content.imgWidth && content.imgHeight ? (
                        <figure class="flex justify-center">
                            <Picture
                                src={image}
                                loading="lazy"
                                alt={content.title}
                                width={content.imgWidth}
                                height={content.imgHeight}
                                attributes={{
                                    picture: {
                                        class: "rounded-lg bg-base-200 overflow-hidden",
                                    },
                                    img: {
                                        class: "w-full h-full object-cover",
                                    },
                                }}
                            />
                        </figure>
                    ) : (
                        image && (
                            <figure class="flex justify-center">
                                <Picture
                                    src={image}
                                    loading="lazy"
                                    alt={content.title}
                                    attributes={{
                                        picture: {
                                            class: "rounded-lg bg-base-200 overflow-hidden",
                                        },
                                        img: {
                                            class: "w-full h-full object-cover",
                                        },
                                    }}
                                />
                            </figure>
                        )
                    )
                }
                <div class="py-6 prose mx-auto">
                    <!-- <img
                        src={image}
                        alt={content.title}
                        width={content.imgWidth}
                        height={content.imgHeight}
                        class="rounded bg-base-200"
                    /> -->
                    <h1 class="text-[30px] my-[20px]">{content.title}</h1>
                    <div class="flex gap-3 my-[20px]">
                        <span class="badge badge-ghost">
                            <Date date={content.pubDate} />
                        </span>
                        {
                            content.author && (
                                <span class="text-sm text-base-content/70">
                                    By {content.author}
                                </span>
                            )
                        }
                    </div>
                    <div class="relative">
                        <slot />
                        {
                            showToc &&
                                !!content._head &&
                                !!content._head.length && (
                                    <div class="absolute left-full ml-[50px] top-[50px] h-full lg:block hidden whitespace-nowrap">
                                        <div class="sticky top-[100px]">
                                            {content._head.map((v) => (
                                                <a
                                                    class="block"
                                                    style={{
                                                        marginLeft:
                                                            (v.level - 2) * 20 +
                                                            "px",
                                                    }}
                                                    href={"#" + v.title}
                                                >
                                                    {v.title}
                                                </a>
                                            ))}
                                        </div>
                                    </div>
                                )
                        }
                    </div>
                </div>
            </article>
            <!-- https://giscus.app/zh-CN -->
            <!-- <script is:inline src="https://giscus.app/client.js"
                data-repo="npmrun/art-blog"
                data-repo-id="R_kgDOH218pQ"
                data-category="Announcements"
                data-category-id="DIC_kwDOH218pc4CRCN1"
                data-mapping="pathname"
                data-strict="0"
                data-reactions-enabled="1"
                data-emit-metadata="0"
                data-input-position="top"
                data-theme="preferred_color_scheme"
                data-lang="zh-CN"
                data-loading="lazy"
                crossorigin="anonymous"
                async>
            </script>
            <div class="giscus"></div>
            <div class="giscus-frame"></div> -->
        </main>
    </div>
</SitePage>
